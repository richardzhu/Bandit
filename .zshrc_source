# Imported from OSX .bash_profile on Aug 27, 2017
# export LDFLAGS="-L/opt/local/lib"
# MacPorts Installer addition on 2017-01-16_at_14:00:55: adding an appropriate PATH variable for use with MacPorts.
# export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
# Finished adapting your PATH environment variable for use with MacPorts.
# Macports path
# export PATH=/opt/local/bin:$PATH

# Setting PATH for Python 3.4
# The orginal version is saved in .bash_profile.pysave
# PATH="/Library/Frameworks/Python.framework/Versions/3.4/bin:${PATH}"
# export PATH

# Git conveniences
export GIT_MERGE_AUTOEDIT=no

# Homebrew path first
export PATH=/usr/local/sbin:$PATH
export PATH=/usr/local/bin:$PATH
alias showfiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
alias hidefiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'

export ETS_TOOLKIT=qt4

# using Sublime as editor for commands
# export EDITOR='subl -w'
# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"
# ZSH_THEME="simple"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-completions)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  # export EDITOR='mvim'
  export EDITOR='vim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# SUPREME

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# alias ls='ls --color=auto -Gp'
alias ls='ls -Gp'
alias rm='rm -i'

# set DEFAULT_USER so agnoster theme recognizes logged-in user
# mac OS X user
export DEFAULT_USER=richardzhu

# Mac iTerm2 tab titling: https://superuser.com/questions/419775/with-bash-iterm2-how-to-name-tabs
# function title {
#     echo -ne "\033]0;"$*"\007"
# }

alias å¤©='echo hello'

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/richardzhu/Applications/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/richardzhu/Applications/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/richardzhu/Applications/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/richardzhu/Applications/google-cloud-sdk/completion.zsh.inc'; fi

# Eternal zsh history.
# ---------------------
# Undocumented feature which sets the size to "unlimited".
# http://stackoverflow.com/questions/9457233/unlimited-bash-history
# wttps://unix.stackexchange.com/questions/273861/unlimited-history-in-zsh
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=10000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.
# export HISTFILESIZE=10000
# export HISTSIZE=100
# export HISTTIMEFORMAT="[%F %T] "
# Change the file location because certain bash sessions truncate .bash_history file upon close.
# http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
# export HISTFILE=~/.zsh_history
# Force prompt to write history after every command.
# http://superuser.com/questions/20900/bash-history-loss
PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

# FZF install
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# tmuxinator!
source ~/.bin/tmuxinator.zsh

# fixup ruby shit
export GEM_HOME=$HOME/gems
export PATH=$HOME/gems/bin:$PATH

### Handle personal dotfiles and scripts

# Prepend shell-scripts dir to path
export PATH=$HOME/bandit/shell-scripts:$PATH

# Load personal and work aliases
source ~/bandit/.bash_aliases
source ~/bandit/.bash_aliases_osx
source ~/bandit/.bash_whisper

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Go install: 2019/03/26
export PATH=/usr/local/go/bin:$PATH
export GOPATH=$HOME/go

# GOPATH bin files! for Skicka
export PATH=$GOPATH/bin:$PATH

# Emacs install (from Homebrew)
alias emacs="/usr/local/Cellar/emacs/26.1_1/bin/emacs -nw"

# Notify me when long-running command finishes!
# Mac-only: http://frantic.im/notify-on-completion
function f_notifyme {
  LAST_EXIT_CODE=$?
  CMD=$(fc -ln -1)
  # No point in waiting for the command to complete
  notifyme "$CMD" "$LAST_EXIT_CODE" &
}
export PS1='$(f_notifyme)'$PS1

export PATH="/usr/local/opt/ruby/bin:$PATH"

# install: https://github.com/nvbn/thefuck
eval $(thefuck --alias)

# install: https://github.com/pyenv/pyenv
PYENV_ROOT="$HOME/.pyenv"
PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# Brew installed on Ubuntu..
eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

# install: conda via pyenv, Ubuntu 18.04
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/richardzhu/.pyenv/versions/anaconda3-2019.07/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/richardzhu/.pyenv/versions/anaconda3-2019.07/etc/profile.d/conda.sh" ]; then
        . "/home/richardzhu/.pyenv/versions/anaconda3-2019.07/etc/profile.d/conda.sh"
    else
        export PATH="/home/richardzhu/.pyenv/versions/anaconda3-2019.07/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# install: FZF bindings (from git), Ubuntu 18.04
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
